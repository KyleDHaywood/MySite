{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheve\\\\OneDrive\\\\Desktop\\\\KsProjects\\\\Projects\\\\Cohort 25\\\\107\\\\onlinestore\\\\src\\\\store\\\\globalState.jsx\",\n    _s = $RefreshSig$();\n\nimport storeContext from \"./storeContext\";\nimport { useState } from \"react\";\nimport prodToCart from \"../components/product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GlobalState = props => {\n  _s();\n\n  const [myCart, setMyCart] = useState([]);\n  const [theUser, setTheUser] = useState({});\n\n  const myAddToCart = product => {\n    console.log(\"global state add\", product);\n    let copy = [...myCart];\n\n    for (let i = 0; i < copy.length; i++) {\n      let existingProd = copy[i];\n\n      if (product._id === existingProd._id) {\n        existingProd.quantity += product.quantity;\n      } else {\n        copy.push(product);\n      }\n\n      setMyCart(copy);\n    }\n  };\n\n  const myRemoveFromCart = productId => {\n    console.log(\"removing item:\", productId);\n    let copy = [...myCart];\n\n    for (let i = 0; i < copy.length; i++) {\n      const prod = copy[i];\n\n      if (prod._id === productId) {\n        copy.splice(i, 1);\n      }\n\n      setMyCart(copy);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(storeContext.Provider, {\n    value: {\n      cart: myCart,\n      user: theUser,\n      addProductToCart: myAddToCart,\n      removeProductFromCart: myRemoveFromCart\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalState, \"d/vtYlMikPYQcIUsOLNU8dIiYIY=\");\n\n_c = GlobalState;\nexport default GlobalState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"sources":["C:/Users/cheve/OneDrive/Desktop/KsProjects/Projects/Cohort 25/107/onlinestore/src/store/globalState.jsx"],"names":["storeContext","useState","prodToCart","GlobalState","props","myCart","setMyCart","theUser","setTheUser","myAddToCart","product","console","log","copy","i","length","existingProd","_id","quantity","push","myRemoveFromCart","productId","prod","splice","cart","user","addProductToCart","removeProductFromCart","children"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,WAAW,GAAIC,OAAD,IAAa;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,OAAhC;AACA,QAAIG,IAAI,GAAG,CAAC,GAAGR,MAAJ,CAAX;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,UAAIE,YAAY,GAAGH,IAAI,CAACC,CAAD,CAAvB;;AAEA,UAAIJ,OAAO,CAACO,GAAR,KAAgBD,YAAY,CAACC,GAAjC,EAAsC;AACpCD,QAAAA,YAAY,CAACE,QAAb,IAAyBR,OAAO,CAACQ,QAAjC;AACD,OAFD,MAEO;AACLL,QAAAA,IAAI,CAACM,IAAL,CAAUT,OAAV;AACD;;AACDJ,MAAAA,SAAS,CAACO,IAAD,CAAT;AACD;AACF,GAbD;;AAcA,QAAMO,gBAAgB,GAAIC,SAAD,IAAe;AACtCV,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BS,SAA9B;AACA,QAAIR,IAAI,GAAG,CAAC,GAAGR,MAAJ,CAAX;;AACA,SAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAMQ,IAAI,GAAGT,IAAI,CAACC,CAAD,CAAjB;;AACA,UAAIQ,IAAI,CAACL,GAAL,KAAaI,SAAjB,EAA4B;AAC1BR,QAAAA,IAAI,CAACU,MAAL,CAAYT,CAAZ,EAAe,CAAf;AACD;;AACDR,MAAAA,SAAS,CAACO,IAAD,CAAT;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,IAAI,EAAEnB,MADD;AAELoB,MAAAA,IAAI,EAAElB,OAFD;AAGLmB,MAAAA,gBAAgB,EAAEjB,WAHb;AAILkB,MAAAA,qBAAqB,EAAEP;AAJlB,KADT;AAAA,cAQGhB,KAAK,CAACwB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1CD;;GAAMzB,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import storeContext from \"./storeContext\";\r\nimport { useState } from \"react\";\r\nimport prodToCart from \"../components/product\";\r\n\r\nconst GlobalState = (props) => {\r\n  const [myCart, setMyCart] = useState([]);\r\n  const [theUser, setTheUser] = useState({});\r\n\r\n  const myAddToCart = (product) => {\r\n    console.log(\"global state add\", product);\r\n    let copy = [...myCart];\r\n    for (let i = 0; i < copy.length; i++) {\r\n      let existingProd = copy[i];\r\n      \r\n      if (product._id === existingProd._id) {\r\n        existingProd.quantity += product.quantity;\r\n      } else {\r\n        copy.push(product);\r\n      }\r\n      setMyCart(copy);\r\n    }\r\n  };\r\n  const myRemoveFromCart = (productId) => {\r\n    console.log(\"removing item:\", productId);\r\n    let copy = [...myCart];\r\n    for (let i = 0; i < copy.length; i++) {\r\n      const prod = copy[i];\r\n      if (prod._id === productId) {\r\n        copy.splice(i, 1);\r\n      }\r\n      setMyCart(copy);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <storeContext.Provider\r\n      value={{\r\n        cart: myCart,\r\n        user: theUser,\r\n        addProductToCart: myAddToCart,\r\n        removeProductFromCart: myRemoveFromCart,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </storeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalState;\r\n"]},"metadata":{},"sourceType":"module"}